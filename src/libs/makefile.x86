AS = gcc
CC = gcc
LINKER = ld

CCFLAGS = -fno-zero-initialized-in-bss -Wall -Werror-implicit-function-declaration -Wunused-parameter  -std=c99 -m32 -nostdlib -fno-builtin -DX86 -DDEBUG -DVERSION=0x0000000001 -g -c
ASFLAGS = -x assembler-with-cpp $(CCFLAGS) -D_ASM
LDFLAGS = -m elf_i386 --gc-sections -Ttext 0xc0200100 -e _start

current_path = $(shell pwd)

root_path = $(current_path)/../..

TARGET_DIR = $(root_path)/libs/x86
TARGET = $(TARGET_DIR)/driver

SOURCES += setup/arch/x86/setup.S

OBJS_DIR = $(root_path)/obj/libs/driver

OBJS = $(foreach filename,\
		$(SOURCES),\
		$(OBJS_DIR)/$(basename $(filename)).o)
		
.PHONY : all clean delete rebuild

all : $(TARGET)

$(TARGET) : $(OBJS) $(TARGET_DIR)
	$(LINKER) $(LDFLAGS) -o $(TARGET) $(OBJS)

$(OBJS) : $(SOURCES) $(OBJS_DIR)
	$(foreach filename,$(SOURCES),\
		$(if $(filter .c,$(suffix $(filename))),\
			$(shell \
			$(CC) $(CCFLAGS) -o $(OBJS_DIR)/$(basename $(filename)).o $(current_path)/$(filename))\
		)\
		$(if $(filter .s,$(suffix $(filename))),\
			$(shell \
			$(AS) $(ASFLAGS) -o $(OBJS_DIR)/$(basename $(filename)).o $(current_path)/$(filename))\
		)\
		$(if $(filter .S,$(suffix $(filename))),\
			$(shell \
			$(AS) $(ASFLAGS) -o $(OBJS_DIR)/$(basename $(filename)).o $(current_path)/$(filename))\
		)\
	)
$(TARGET_DIR) :
	mkdir -p $(TARGET_DIR)
	
$(OBJS_DIR) :
	$(foreach filename,\
		$(OBJS),\
		$(shell mkdir -p $(dir $(filename))))

clean :
	-rm -r $(OBJS_DIR)
	
delete :
	-rm -r $(OBJS_DIR)
	-rm -r $(TARGET_DIR)
	
rebuild : delete all

