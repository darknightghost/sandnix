<?xml version="1.0" encoding="utf-8"?><target name="uboot" type="build">
    <output name="kernel.uboot"/>
    <outdir path="../../../../bin/$(ARCH)/sandnix"/>
    <middir path="../../../../obj/$(ARCH)/sandnix"/>
    <introduction>
        Uboot header arm only.
    </introduction>
    <archs>
        <arch name="arm.armv7.cortex-a9.samsung_exynos4412.itop_4412">
            <PREV></PREV>
            <ARCHDEF></ARCHDEF>
            <DEP>arm-none-eabi-gcc</DEP>
            <DEPFLAGS></DEPFLAGS>
            <DEPRULE>$(DEP) $(DEPFLAGS) -MM $&lt; | awk 'NR == 1 {printf(&quot;%s%s\n&quot;,&quot;$(dir $@)&quot;,$$0)} NR != 1 {print $$0}' | cat &gt; $@</DEPRULE>
            <CC>arm-none-eabi-gcc</CC>
            <CFLAGS>-c</CFLAGS>
            <CCRULE>$(CC) $(CFLAGS) -o $@ $&lt;</CCRULE>
            <AS>arm-none-eabi-gcc</AS>
            <ASFLAGS>-x assembler-with-cpp -c -D_ASM</ASFLAGS>
            <ASRULE>$(AS) $(ASFLAGS) -o $@ $&lt;</ASRULE>
            <LD>arm-none-eabi-ld</LD>
            <LDFLAGS>-Ttext 0x30800000</LDFLAGS>
            <LDRULE>$(LD) $(LDFLAGS) -o $@.tmp $^;arm-none-eabi-objcopy -O binary -S $@.tmp $@</LDRULE>
			<AR></AR>
			<ARRULE></ARRULE>
            <AFTER>./image-builder.py -t kernel -h $(LINKED) -i $(OUTDIR)/kernel -o $(OUTDIR)/$(OUTPUT) -p 0x50000000</AFTER>
        </arch>
    </archs>
    <dependencies>
    </dependencies>
    <sub-targets>
    </sub-targets>
    <options>
    </options>
</target>