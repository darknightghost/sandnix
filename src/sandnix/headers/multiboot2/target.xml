<?xml version="1.0" encoding="utf-8"?><target name="multiboot2" type="build">
    <output name="kernel.multiboot2"/>
    <outdir path="../../../../bin/$(ARCH)/sandnix"/>
    <middir path="../../../../obj/$(ARCH)/sandnix"/>
    <introduction>
        Multiboot2 header.X86 only.
    </introduction>
    <archs>
        <arch name="x86">
            <PREV></PREV>
            <ARCHDEF>-DX86</ARCHDEF>
            <DEP>gcc</DEP>
            <DEPFLAGS>$(ARCHDEF)</DEPFLAGS>
            <DEPRULE>$(DEP) $(DEPFLAGS) -MM $&lt; | awk 'NR == 1 {printf(&quot;%s%s\n&quot;,&quot;$(dir $@)&quot;,$$0)} NR != 1 {print $$0}' | cat &gt; $@</DEPRULE>
            <CC>gcc</CC>
            <CFLAGS>$(ARCHDEF)</CFLAGS>
            <CCRULE>$(CC) -c $(CFLAGS) -o $@ $&lt;</CCRULE>
            <AS>gcc</AS>
            <ASFLAGS>-x assembler-with-cpp -m32 -D_ASM $(ARCHDEF)</ASFLAGS>
            <ASRULE>$(AS) -c $(ASFLAGS) -o $@ $&lt;</ASRULE>
            <LD>ld</LD>
            <LDFLAGS>--oformat binary -m elf_i386 -N -Ttext 0x0000</LDFLAGS>
            <LDRULE>$(LD) $(LDFLAGS) -o $@ $^</LDRULE>
			<AR></AR>
			<ARRULE></ARRULE>
            <AFTER>./image-builder.py -h $(LINKED) -k $(OUTDIR)/kernel -o $(OUTDIR)/$(OUTPUT) -v 0xC0000000</AFTER>
        </arch>
    </archs>
    <dependencies>
        <dep depstage="AFTER" path="../../kernel/target.xml"/>
    </dependencies>
    <sub-targets>
    </sub-targets>
    <options>
    </options>
</target>