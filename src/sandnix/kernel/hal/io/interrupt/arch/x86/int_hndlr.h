/*
    Copyright 2016,王思远 <darknightghost.cn@gmail.com>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#pragma once
#include "../../../../../../../common/common.h"

#define	MODULE_NAME hal_io

void    PRIVATE(int_0x00)();
void    PRIVATE(int_0x01)();
void    PRIVATE(int_0x02)();
void    PRIVATE(int_0x03)();
void    PRIVATE(int_0x04)();
void    PRIVATE(int_0x05)();
void    PRIVATE(int_0x06)();
void    PRIVATE(int_0x07)();
void    PRIVATE(int_0x08)();
void    PRIVATE(int_0x09)();
void    PRIVATE(int_0x0A)();
void    PRIVATE(int_0x0B)();
void    PRIVATE(int_0x0C)();
void    PRIVATE(int_0x0D)();
void    PRIVATE(int_0x0E)();
void    PRIVATE(int_0x0F)();
void    PRIVATE(int_0x10)();
void    PRIVATE(int_0x11)();
void    PRIVATE(int_0x12)();
void    PRIVATE(int_0x13)();
void    PRIVATE(int_0x14)();
void    PRIVATE(int_0x15)();
void    PRIVATE(int_0x16)();
void    PRIVATE(int_0x17)();
void    PRIVATE(int_0x18)();
void    PRIVATE(int_0x19)();
void    PRIVATE(int_0x1A)();
void    PRIVATE(int_0x1B)();
void    PRIVATE(int_0x1C)();
void    PRIVATE(int_0x1D)();
void    PRIVATE(int_0x1E)();
void    PRIVATE(int_0x1F)();
void    PRIVATE(int_0x20)();
void    PRIVATE(int_0x21)();
void    PRIVATE(int_0x22)();
void    PRIVATE(int_0x23)();
void    PRIVATE(int_0x24)();
void    PRIVATE(int_0x25)();
void    PRIVATE(int_0x26)();
void    PRIVATE(int_0x27)();
void    PRIVATE(int_0x28)();
void    PRIVATE(int_0x29)();
void    PRIVATE(int_0x2A)();
void    PRIVATE(int_0x2B)();
void    PRIVATE(int_0x2C)();
void    PRIVATE(int_0x2D)();
void    PRIVATE(int_0x2E)();
void    PRIVATE(int_0x2F)();
void    PRIVATE(int_0x30)();
void    PRIVATE(int_0x31)();
void    PRIVATE(int_0x32)();
void    PRIVATE(int_0x33)();
void    PRIVATE(int_0x34)();
void    PRIVATE(int_0x35)();
void    PRIVATE(int_0x36)();
void    PRIVATE(int_0x37)();
void    PRIVATE(int_0x38)();
void    PRIVATE(int_0x39)();
void    PRIVATE(int_0x3A)();
void    PRIVATE(int_0x3B)();
void    PRIVATE(int_0x3C)();
void    PRIVATE(int_0x3D)();
void    PRIVATE(int_0x3E)();
void    PRIVATE(int_0x3F)();
void    PRIVATE(int_0x40)();
void    PRIVATE(int_0x41)();
void    PRIVATE(int_0x42)();
void    PRIVATE(int_0x43)();
void    PRIVATE(int_0x44)();
void    PRIVATE(int_0x45)();
void    PRIVATE(int_0x46)();
void    PRIVATE(int_0x47)();
void    PRIVATE(int_0x48)();
void    PRIVATE(int_0x49)();
void    PRIVATE(int_0x4A)();
void    PRIVATE(int_0x4B)();
void    PRIVATE(int_0x4C)();
void    PRIVATE(int_0x4D)();
void    PRIVATE(int_0x4E)();
void    PRIVATE(int_0x4F)();
void    PRIVATE(int_0x50)();
void    PRIVATE(int_0x51)();
void    PRIVATE(int_0x52)();
void    PRIVATE(int_0x53)();
void    PRIVATE(int_0x54)();
void    PRIVATE(int_0x55)();
void    PRIVATE(int_0x56)();
void    PRIVATE(int_0x57)();
void    PRIVATE(int_0x58)();
void    PRIVATE(int_0x59)();
void    PRIVATE(int_0x5A)();
void    PRIVATE(int_0x5B)();
void    PRIVATE(int_0x5C)();
void    PRIVATE(int_0x5D)();
void    PRIVATE(int_0x5E)();
void    PRIVATE(int_0x5F)();
void    PRIVATE(int_0x60)();
void    PRIVATE(int_0x61)();
void    PRIVATE(int_0x62)();
void    PRIVATE(int_0x63)();
void    PRIVATE(int_0x64)();
void    PRIVATE(int_0x65)();
void    PRIVATE(int_0x66)();
void    PRIVATE(int_0x67)();
void    PRIVATE(int_0x68)();
void    PRIVATE(int_0x69)();
void    PRIVATE(int_0x6A)();
void    PRIVATE(int_0x6B)();
void    PRIVATE(int_0x6C)();
void    PRIVATE(int_0x6D)();
void    PRIVATE(int_0x6E)();
void    PRIVATE(int_0x6F)();
void    PRIVATE(int_0x70)();
void    PRIVATE(int_0x71)();
void    PRIVATE(int_0x72)();
void    PRIVATE(int_0x73)();
void    PRIVATE(int_0x74)();
void    PRIVATE(int_0x75)();
void    PRIVATE(int_0x76)();
void    PRIVATE(int_0x77)();
void    PRIVATE(int_0x78)();
void    PRIVATE(int_0x79)();
void    PRIVATE(int_0x7A)();
void    PRIVATE(int_0x7B)();
void    PRIVATE(int_0x7C)();
void    PRIVATE(int_0x7D)();
void    PRIVATE(int_0x7E)();
void    PRIVATE(int_0x7F)();
void    PRIVATE(int_0x80)();
void    PRIVATE(int_0x81)();
void    PRIVATE(int_0x82)();
void    PRIVATE(int_0x83)();
void    PRIVATE(int_0x84)();
void    PRIVATE(int_0x85)();
void    PRIVATE(int_0x86)();
void    PRIVATE(int_0x87)();
void    PRIVATE(int_0x88)();
void    PRIVATE(int_0x89)();
void    PRIVATE(int_0x8A)();
void    PRIVATE(int_0x8B)();
void    PRIVATE(int_0x8C)();
void    PRIVATE(int_0x8D)();
void    PRIVATE(int_0x8E)();
void    PRIVATE(int_0x8F)();
void    PRIVATE(int_0x90)();
void    PRIVATE(int_0x91)();
void    PRIVATE(int_0x92)();
void    PRIVATE(int_0x93)();
void    PRIVATE(int_0x94)();
void    PRIVATE(int_0x95)();
void    PRIVATE(int_0x96)();
void    PRIVATE(int_0x97)();
void    PRIVATE(int_0x98)();
void    PRIVATE(int_0x99)();
void    PRIVATE(int_0x9A)();
void    PRIVATE(int_0x9B)();
void    PRIVATE(int_0x9C)();
void    PRIVATE(int_0x9D)();
void    PRIVATE(int_0x9E)();
void    PRIVATE(int_0x9F)();
void    PRIVATE(int_0xA0)();
void    PRIVATE(int_0xA1)();
void    PRIVATE(int_0xA2)();
void    PRIVATE(int_0xA3)();
void    PRIVATE(int_0xA4)();
void    PRIVATE(int_0xA5)();
void    PRIVATE(int_0xA6)();
void    PRIVATE(int_0xA7)();
void    PRIVATE(int_0xA8)();
void    PRIVATE(int_0xA9)();
void    PRIVATE(int_0xAA)();
void    PRIVATE(int_0xAB)();
void    PRIVATE(int_0xAC)();
void    PRIVATE(int_0xAD)();
void    PRIVATE(int_0xAE)();
void    PRIVATE(int_0xAF)();
void    PRIVATE(int_0xB0)();
void    PRIVATE(int_0xB1)();
void    PRIVATE(int_0xB2)();
void    PRIVATE(int_0xB3)();
void    PRIVATE(int_0xB4)();
void    PRIVATE(int_0xB5)();
void    PRIVATE(int_0xB6)();
void    PRIVATE(int_0xB7)();
void    PRIVATE(int_0xB8)();
void    PRIVATE(int_0xB9)();
void    PRIVATE(int_0xBA)();
void    PRIVATE(int_0xBB)();
void    PRIVATE(int_0xBC)();
void    PRIVATE(int_0xBD)();
void    PRIVATE(int_0xBE)();
void    PRIVATE(int_0xBF)();
void    PRIVATE(int_0xC0)();
void    PRIVATE(int_0xC1)();
void    PRIVATE(int_0xC2)();
void    PRIVATE(int_0xC3)();
void    PRIVATE(int_0xC4)();
void    PRIVATE(int_0xC5)();
void    PRIVATE(int_0xC6)();
void    PRIVATE(int_0xC7)();
void    PRIVATE(int_0xC8)();
void    PRIVATE(int_0xC9)();
void    PRIVATE(int_0xCA)();
void    PRIVATE(int_0xCB)();
void    PRIVATE(int_0xCC)();
void    PRIVATE(int_0xCD)();
void    PRIVATE(int_0xCE)();
void    PRIVATE(int_0xCF)();
void    PRIVATE(int_0xD0)();
void    PRIVATE(int_0xD1)();
void    PRIVATE(int_0xD2)();
void    PRIVATE(int_0xD3)();
void    PRIVATE(int_0xD4)();
void    PRIVATE(int_0xD5)();
void    PRIVATE(int_0xD6)();
void    PRIVATE(int_0xD7)();
void    PRIVATE(int_0xD8)();
void    PRIVATE(int_0xD9)();
void    PRIVATE(int_0xDA)();
void    PRIVATE(int_0xDB)();
void    PRIVATE(int_0xDC)();
void    PRIVATE(int_0xDD)();
void    PRIVATE(int_0xDE)();
void    PRIVATE(int_0xDF)();
void    PRIVATE(int_0xE0)();
void    PRIVATE(int_0xE1)();
void    PRIVATE(int_0xE2)();
void    PRIVATE(int_0xE3)();
void    PRIVATE(int_0xE4)();
void    PRIVATE(int_0xE5)();
void    PRIVATE(int_0xE6)();
void    PRIVATE(int_0xE7)();
void    PRIVATE(int_0xE8)();
void    PRIVATE(int_0xE9)();
void    PRIVATE(int_0xEA)();
void    PRIVATE(int_0xEB)();
void    PRIVATE(int_0xEC)();
void    PRIVATE(int_0xED)();
void    PRIVATE(int_0xEE)();
void    PRIVATE(int_0xEF)();
void    PRIVATE(int_0xF0)();
void    PRIVATE(int_0xF1)();
void    PRIVATE(int_0xF2)();
void    PRIVATE(int_0xF3)();
void    PRIVATE(int_0xF4)();
void    PRIVATE(int_0xF5)();
void    PRIVATE(int_0xF6)();
void    PRIVATE(int_0xF7)();
void    PRIVATE(int_0xF8)();
void    PRIVATE(int_0xF9)();
void    PRIVATE(int_0xFA)();
void    PRIVATE(int_0xFB)();
void    PRIVATE(int_0xFC)();
void    PRIVATE(int_0xFD)();
void    PRIVATE(int_0xFE)();
void    PRIVATE(int_0xFF)();

#undef	MODULE_NAME
